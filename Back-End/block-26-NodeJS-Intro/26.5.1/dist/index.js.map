{"version":3,"sources":["../src/index.js"],"names":["app","route","post","req","res","id","params","process","env","FILE_PATH","file","fileToBeDeleted","JSON","parse","find","recipeId","Number","Error","newFile","filter","stringify","status","json","use","err","_req","_next","Erro","message","PORT","listen","console","log"],"mappings":";;AAAA;;;;AAEA;;;;AACA;;AAEA;;;;;;AAJA,IAAMA,MAAM,wBAAZ;;;AAMA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEAA,IACGC,KADH,CACS,aADT,EAEGC,IAFH,CAEQ;AAAA,qEAAO,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,cADG,GACIF,IAAIG,MADR,CACHD,EADG;AAAA;AAAA,mBAEQ,wBAASE,QAAQC,GAAR,CAAYC,SAArB,EAAgC,OAAhC,CAFR;;AAAA;AAELC,gBAFK;AAGLC,2BAHK,GAGaC,KAAKC,KAAL,CAAWH,IAAX,EAAiBI,IAAjB,CAAsB;AAAA,kBAAMC,QAAN,SAAEV,EAAF;AAAA,qBAAoBW,OAAOD,QAAP,MAAqB,CAACV,EAA1C;AAAA,aAAtB,CAHb;;AAAA,gBAKNM,eALM;AAAA;AAAA;AAAA;;AAAA,kBAMH,IAAIM,KAAJ,CAAU,kBAAV,CANG;;AAAA;AASLC,mBATK,GASKN,KAAKC,KAAL,CAAWH,IAAX,EAAiBS,MAAjB,CAAwB;AAAA,kBAAMJ,QAAN,SAAEV,EAAF;AAAA,qBAAoBW,OAAOD,QAAP,MAAqBC,OAAOX,EAAP,CAAzC;AAAA,aAAxB,CATL;AAAA;AAAA,mBAUL,yBAAUE,QAAQC,GAAR,CAAYC,SAAtB,EAAiCG,KAAKQ,SAAL,CAAeF,OAAf,CAAjC,CAVK;;AAAA;AAAA,6CAWJd,IAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACX,gCAAD,EAArB,CAXI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;;AAAA;AAAA;AAAA;AAAA,IAFR;;AAgBAX,IAAIuB,GAAJ,CAAQ,UAACC,GAAD,EAAMC,IAAN,EAAYrB,GAAZ,EAAiBsB,KAAjB,EAA2B;AACjCtB,MAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEK,MAAMH,IAAII,OAAZ,EAArB;AACD,CAFD;;AAIA,IAAMC,OAAO,IAAb;AACA7B,IAAI8B,MAAJ,CAAWD,IAAX,EAAiB;AAAA,SAAME,QAAQC,GAAR,4BAAqCH,IAArC,CAAN;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from 'express';\nconst app = express();\nimport rescue from 'express-rescue';\nimport { readFile, writeFile } from 'fs/promises';\n\nimport 'dotenv/config';\n\n// const soma = (req, res, next) => {\n//   const { operacao, numero1, numero2 } = req.params;\n//   const resultadoSoma = Number(numero1) + Number(numero2);\n\n//   return operacao !== 'soma' ? next() : res.status(200).json({ resultadoSoma });\n// }\n\n// const subtracao = (req, res, next) => {\n//   const { operacao, numero1, numero2 } = req.params;\n//   const resultadoSubtracao = numero1 - numero2;\n\n//   return operacao !== 'subtracao' ? next() : res.status(200).json({ resultadoSubtracao });\n// }\n\n// const divisao = (req, res, next) => {\n//   const { operacao, numero1, numero2 } = req.params;\n//   const resultadoDivisao = (numero1 / numero2).toFixed(2);\n\n//   return operacao !== 'divisao' ? next() : res.status(200).json({ resultadoDivisao });\n// }\n\n// const multiplicacao = (req, res, next) => {\n//   const { operacao, numero1, numero2 } = req.params;\n//   const resultadoMultiplicacao = numero1 * numero2;\n\n//   return operacao !== 'multiplicacao' ? next() : res.status(200).json({ resultadoMultiplicacao });\n// }\n\n// app\n//   .get('/:operacao/:numero1/:numero2', soma, subtracao, divisao, multiplicacao);\n\n// app.use((err, _req, res, _next) => {\n//   res.status(500).json({ Erro: err.message })\n// });\n\napp\n  .route('/recipe/:id')\n  .post(rescue(async (req, res) => {\n    const { id } = req.params;\n    const file = await readFile(process.env.FILE_PATH, \"utf-8\");\n    const fileToBeDeleted = JSON.parse(file).find(({id: recipeId}) => Number(recipeId) === +id);\n\n    if (!fileToBeDeleted) {\n      throw new Error(\"Recipe not found\");\n    }\n\n    const newFile = JSON.parse(file).filter(({id: recipeId}) => Number(recipeId) !== Number(id));\n    await writeFile(process.env.FILE_PATH, JSON.stringify(newFile));\n    return res.status(200).json({fileToBeDeleted});\n  }));\n\napp.use((err, _req, res, _next) => {\n  res.status(500).json({ Erro: err.message });\n});\n\nconst PORT = 3000;\napp.listen(PORT, () => console.log(`App listening on port ${PORT}`));\n"]}